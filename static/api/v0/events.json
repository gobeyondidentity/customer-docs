{
	"openapi": "3.0.0",
	"info": {
		"description": "The Beyond Identity Events API, is a service designed to offer comprehensive access to events data within the Beyond Identity ecosystem. This API is aimed at developers and organizations looking to retrieve detailed information about security-related events, user activities, and system interactions over a specified period.\n\nTo use the Beyond Identity Events API, an API key is required for authentication. To obtain this key, interested parties should contact the support team at https://support.beyondidentity.com. This process ensures that access is granted securely and appropriately, following verification and alignment with use case requirements.",
		"title": "Beyond Identity Events API",
		"version": "v0"
	},
	"servers": [
		{
			"url": "https://dataexport-public.byndid.com"
		}
	],
	"paths": {
		"/v1/events": {
			"get": {
        "tags": [
          "Events"
        ],
				"operationId": "getEvents",
				"parameters": [
					{
						"description": "Unix epoch in milliseconds to begin events recorded time. Defaults to 0.",
						"explode": true,
						"in": "query",
						"name": "start_time",
						"required": false,
						"schema": {
							"format": "int64",
							"type": "integer"
						},
						"style": "form"
					},
					{
						"description": "Unix epoch in milliseconds to end events recorded time.  No default.",
						"explode": true,
						"in": "query",
						"name": "end_time",
						"required": false,
						"schema": {
							"format": "int64",
							"type": "integer"
						},
						"style": "form"
					},
					{
						"description": "The number of events to return in a single page.  The default is 100 and the maximum page_size is 1000.\n",
						"explode": true,
						"in": "query",
						"name": "page_size",
						"required": false,
						"schema": {
							"format": "int64",
							"type": "integer"
						},
						"style": "form"
					},
					{
						"description": "The ordering of the events (by time injected by the dataexport system, not when they\noccurred).  No default.\n",
						"explode": true,
						"in": "query",
						"name": "ordering",
						"required": true,
						"schema": {
							"enum": [
								"asc",
								"desc"
							],
							"type": "string"
						},
						"style": "form"
					},
					{
						"description": "A page contains 100 events by default, or 'page_size' events if that's set in the request.\nSet this to the value of 'cursor' from the last response to retrieve the next page of results.\n",
						"explode": true,
						"in": "query",
						"name": "cursor",
						"required": false,
						"schema": {
							"type": "string"
						},
						"style": "form"
					},
					{
						"description": "If passed, returns only events of the given event types. Case insensitive.",
						"example": "OIDC_INBOUND",
						"explode": true,
						"in": "query",
						"name": "event_type",
						"required": false,
						"schema": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"style": "form"
					},
					{
						"description": "If passed, returns onnly events involving principal agents with these full human names.",
						"example": "John Smith",
						"explode": true,
						"in": "query",
						"name": "actor",
						"required": false,
						"schema": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"style": "form"
					},
					{
						"description": "If passed, returns only events with the given outcomes.",
						"example": "SUCCESS",
						"explode": true,
						"in": "query",
						"name": "outcome",
						"required": false,
						"schema": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"style": "form"
					},
					{
						"description": "If passed, returns only events produced by the given services.",
						"explode": true,
						"in": "query",
						"name": "emitting_service",
						"required": false,
						"schema": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"style": "form"
					},
					{
						"description": "If passed, returns only events with the given correlation IDs.",
						"explode": true,
						"in": "query",
						"name": "correlation_id",
						"required": false,
						"schema": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"style": "form"
					},
					{
						"description": "If passed, returns events with data matching a free-form text query of the given input.\n",
						"example": "add_device OR device_credential_change -windows",
						"explode": true,
						"in": "query",
						"name": "query_text",
						"required": false,
						"schema": {
							"type": "string"
						},
						"style": "form"
					},
					{
						"description": "If set to true events whose data cannot be fully attested to by Beyond Identity will be included in the repsonse.\n",
						"example": true,
						"explode": true,
						"in": "query",
						"name": "include_not_attested",
						"required": false,
						"schema": {
							"type": "boolean"
						},
						"style": "form"
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"description": "OK",
											"example": "OK",
											"type": "string"
										},
										"body": {
											"$ref": "#/components/schemas/EventsResponse"
										}
									}
								}
							}
						},
						"description": "Retrieve the given page of events for the given tenant over the given window."
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"description": "Error message.",
											"example": "Malformed request: start_time must be an integer.",
											"type": "string"
										}
									}
								}
							}
						},
						"description": "Bad request."
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"description": "Error message.",
											"example": "User unauthorized.",
											"type": "string"
										}
									}
								}
							}
						},
						"description": "Not authorized."
					},
					"403": {
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"description": "Error message.",
											"example": "Authorization token is not active",
											"type": "string"
										}
									}
								}
							}
						},
						"description": "Forbidden user"
					}
				},
				"security": [
					{
						"bearerAuth": []
					}
				],
				"summary": "Get events by tenant, with optional case-insensitive filters."
			}
		}
	},
	"components": {
		"responses": {
			"BadRequest": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"message": {
									"description": "Error message.",
									"example": "Malformed request: start_time must be an integer.",
									"type": "string"
								}
							}
						}
					}
				},
				"description": "Bad request."
			},
			"NotAuthorized": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"message": {
									"description": "Error message.",
									"example": "User unauthorized.",
									"type": "string"
								}
							}
						}
					}
				},
				"description": "Not authorized."
			},
			"InvalidUser": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"message": {
									"description": "Error message.",
									"example": "Authorization token is not active",
									"type": "string"
								}
							}
						}
					}
				},
				"description": "Forbidden user"
			},
			"Response": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"message": {
									"description": "OK",
									"example": "OK",
									"type": "string"
								},
								"body": {
									"$ref": "#/components/schemas/EventsResponse"
								}
							}
						}
					}
				},
				"description": "Retrieve the given page of events for the given tenant over the given window."
			}
		},
		"schemas": {
      "ciamCreateUserRequest": {
        "required": [
          "binding_token_delivery_method",
          "display_name",
          "email",
          "external_id",
          "user_name"
        ],
        "type": "object",
        "properties": {
          "external_id": {
            "type": "string",
            "description": "This is the identifier which corresponds to the user in your database."
          },
          "email": {
            "type": "string",
            "description": "This is the email address for the user. An email will be sent to the user to enable them to enrol in Beyond Identity."
          },
          "user_name": {
            "type": "string",
            "description": "Internal field to identify the user.  When signing in, this will be returned as the subject field of the ID token."
          },
          "display_name": {
            "type": "string",
            "description": "Internal field to identify the user's name."
          },
          "binding_token_delivery_method": {
            "type": "string",
            "description": "Delivery method of the binding token. Can only be 'email'"
          }
        }
      },
      "ciamRecoverUserRequest": {
        "required": [
          "binding_token_delivery_method",
          "external_id"
        ],
        "type": "object",
        "properties": {
          "external_id": {
            "type": "string",
            "description": "This is the identifier which corresponds to the user in your database."
          },
          "binding_token_delivery_method": {
            "type": "string",
            "description": "Delivery method of the binding token. Can only be 'email'"
          }
        }
      },
      "ciamUser": {
        "type": "object",
        "properties": {
          "internal_id": {
            "type": "string",
            "description": "This is the internal ID of the user within your Beyond Identity directory."
          },
          "external_id": {
            "type": "string",
            "description": "This is the external ID passed in the user creation call, generally a unique identifier into an external directory of users."
          },
          "email": {
            "type": "string",
            "description": "This is the email address of the user passed in the user creation call."
          },
          "user_name": {
            "type": "string",
            "description": "This is the user name of the user passed in the user creation call."
          },
          "display_name": {
            "type": "string",
            "description": "This is the display name of the user passed in the user creation call."
          },
          "date_created": {
            "type": "string",
            "description": "This is the timestamp for when the user was originally created.",
            "format": "date-time"
          },
          "date_modified": {
            "type": "string",
            "description": "This is the timestamp for the last update to the user entry.",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/ciamUserStatus"
          }
        }
      },
      "ciamUserStatus": {
        "type": "string",
        "description": "One of `USER_STATUS_ACTIVE`, `USER_STATUS_SUSPENDED`, or `USER_STATUS_DELETED`. New users are always created with the status `USER_STATUS_ACTIVE`.",
        "default": "USER_STATUS_UNSET",
        "enum": [
          "USER_STATUS_UNSET",
          "USER_STATUS_ACTIVE",
          "USER_STATUS_SUSPENDED",
          "USER_STATUS_DELETED"
        ]
      },
			"EventsResponse": {
				"description": "The full response to GET /events.",
				"properties": {
					"events": {
						"description": "The page of events.",
						"items": {
							"$ref": "#/components/schemas/Event"
						},
						"type": "array"
					},
					"cursor": {
						"description": "An opaque value used to indicate that more results are available.  Use this value\nto retrieve the next page of results.  Once a response is returned without a 'next_cursor'\nvalue, it can be assumed that all results have been paged through.\n",
						"example": "eyJuZXh0X2N1cnNvciI6IHsiaWQiOiAiOTg4MDgyZGMtYTc5OC0xMWViLWJjYmMtMDI0MmFjMTMwMDAyIiwgInRpbWUiOiAxOTMzODQ5MDR9Cg==",
						"type": "string"
					}
				},
				"type": "object"
			},
			"Event": {
				"description": "A Beyond Identity event.",
				"properties": {
					"id": {
						"description": "The unique ID for this event.",
						"example": "988080ca-a798-11eb-bcbc-0242ac130002",
						"format": "uuid",
						"type": "string"
					},
					"correlation_id": {
						"description": "The ID to link events in a single authentication flow.",
						"example": "s8wmsdcsnvnurrnv848rnvsaj8s",
						"type": "string"
					},
					"actor_tenant_id": {
						"deprecated": true,
						"description": "The ID of the tenant that performed the event. This could be different from tenant_id when one tenant administrates another.",
						"example": "beyond-identity",
						"type": "string"
					},
					"service": {
						"description": "Service that produced the event.",
						"example": "directory",
						"type": "string"
					},
					"event_occurred_millis": {
						"description": "The Unix epoch in milliseconds of the moment the event happened in the system.",
						"example": 19359827389228,
						"format": "int64",
						"type": "integer"
					},
					"event_recorded_millis": {
						"description": "The Unix epoch in milliseconds of the moment the event was saved by the system.",
						"example": 19347878234867,
						"format": "int64",
						"type": "integer"
					},
					"outcome": {
						"description": "The outcome of the event i.e. whether the event was (un)successful, had a side effect, etc.",
						"example": "SUCCESS",
						"type": "string"
					},
					"attested": {
						"description": "Whether the data in the event can be attested to by Beyond Identity. Events that have this field set to false may contain raw user input or data from a process not controlled by Beyond Identity.",
						"example": true,
						"type": "boolean"
					},
					"actor": {
						"$ref": "#/components/schemas/Actor"
					},
					"event_type": {
						"$ref": "#/components/schemas/EventType"
					},
					"data": {
						"$ref": "#/components/schemas/Data"
					}
				},
				"required": [
					"correlation_id",
					"event_occurred_millis",
					"event_type",
					"id",
					"service"
				],
				"type": "object"
			},
			"EventType": {
				"description": "The type of the event.",
				"enum": [
					"USER_AUTHENTICATION",
					"OIDC_INBOUND",
					"OIDC_COMPLETE",
					"WSFED_INBOUND",
					"WSFED_COMPLETE",
					"SAML_INBOUND",
					"SAML_COMPLETE",
					"ADD_DEVICE",
					"POLICY",
					"TENANT_CREATED",
					"GROUP_CHANGE",
					"USER_CHANGE",
					"GROUP_MEMBERSHIP_CHANGE",
					"CONTINUOUS_AUTHENTICATION",
					"DEVICE_CREDENTIAL_CHANGE",
					"BOOTSTRAP_INBOUND",
					"BOOTSTRAP_COMPLETE",
					"BOOTSTRAP_KEY_ROTATION",
					"AUTHSERVER_ACCESS",
					"AUTHSERVER_DIRECTORY_ACCESS",
					"AUTHORIZE_CONTEXT_ACCESS",
					"APPLICATION_ACCESS",
					"TENANT_CHANGE",
					"OIDC_CLIENT_CHANGE",
					"CONSOLE_SSO_IDP_CHANGE",
					"CONSOLE_SSO_OIDC_AUTH_CONFIG_CHANGE",
					"CONSOLE_SSO_SAML_AUTH_CONNECTION_CHANGE",
					"SAML_CONNECTION_CHANGE",
					"OKTA_DESKTOP_LOGIN_CONFIGURATION_CHANGE",
					"OKTA_EVENT_HOOK_CONFIGURATION_CHANGE",
					"POLICY_CHANGE",
					"OKTA_REGISTRATION_ATTRIBUTE_CONFIGURATION_CHANGE",
					"GPG_KEY_CHANGE",
					"ENROLLMENT_CHANGE",
					"REALM_CHANGE",
					"SCIM11_PROVIDER_CHANGE",
					"SCIM20_PROVIDER_CHANGE",
					"OUTBOUND_ATTRIBUTE_UPDATE",
					"CREDENTIAL_CHANGE",
					"CREDENTIAL_BINDING_JOB_CHANGE",
					"AUTHENTICATOR_INVOCATION_ATTEMPT"
				],
				"example": "OIDC_INBOUND",
				"type": "string"
			},
			"Actor": {
				"description": "The entity whose action caused the event to be emitted.",
				"properties": {
					"type": {
						"description": "The type of actor.",
						"example": "User",
						"type": "string"
					},
					"display_name": {
						"description": "The display name for the actor.",
						"example": "Alan Turing",
						"type": "string"
					},
					"id": {
						"description": "The ID for the actor. Internal ID for Users.",
						"example": "c6a8669e-ee95-4c42-9ef6-4a9b61380164",
						"type": "string"
					},
					"display_id": {
						"description": "A human-friendly ID of the actor.",
						"example": "alan@turing.io",
						"type": "string"
					},
					"tenant_id": {
						"description": "The actor's tenant ID. This may not match the tenant ID acted upon when e.g. one tenant administers another.",
						"example": "Beyond Identity",
						"type": "string"
					}
				},
				"required": [
					"display_id",
					"id",
					"tenant_id",
					"type"
				],
				"type": "object"
			},
			"Data": {
				"description": "The event payload.",
				"discriminator": {
					"mapping": {
						"UserAuthentication": "#/components/schemas/UserAuthentication",
						"OidcInbound": "#/components/schemas/OidcInbound",
						"OidcComplete": "#/components/schemas/OidcComplete",
						"WsFedInbound": "#/components/schemas/WsFedInbound",
						"WsFedComplete": "#/components/schemas/WsFedComplete",
						"SamlInbound": "#/components/schemas/SamlInbound",
						"SamlComplete": "#/components/schemas/SamlComplete",
						"AddDevice": "#/components/schemas/AddDevice",
						"Policy": "#/components/schemas/Policy",
						"CreateTenant": "#/components/schemas/CreateTenant",
						"GroupChange": "#/components/schemas/GroupChange",
						"UserChange": "#/components/schemas/UserChange",
						"GroupMembershipChange": "#/components/schemas/GroupMembershipChange",
						"ContinuousAuthentication": "#/components/schemas/ContinuousAuthentication",
						"DeviceCredentialChange": "#/components/schemas/DeviceCredentialChange",
						"TenantChange": "#/components/schemas/TenantChange",
						"OIDCClientChange": "#/components/schemas/OIDCClientChange",
						"ConsoleSsoIdpChange": "#/components/schemas/ConsoleSsoIdpChange",
						"ConsoleSsoOIDCAuthConfigChange": "#/components/schemas/ConsoleSsoOIDCAuthConfigChange",
						"ConsoleSsoSAMLAuthConnectionChange": "#/components/schemas/ConsoleSsoSAMLAuthConnectionChange",
						"SAMLConnectionChange": "#/components/schemas/SAMLConnectionChange",
						"OktaDesktopLoginConfigurationChange": "#/components/schemas/OktaDesktopLoginConfigurationChange",
						"OktaEventHookConfigurationChange": "#/components/schemas/OktaEventHookConfigurationChange",
						"PolicyChange": "#/components/schemas/PolicyChange",
						"OktaRegistrationAttributeConfigurationChange": "#/components/schemas/OktaRegistrationAttributeConfigurationChange",
						"GPGKeyChange": "#/components/schemas/GPGKeyChange",
						"EnrollmentChange": "#/components/schemas/EnrollmentChange",
						"RealmChange": "#/components/schemas/RealmChange",
						"Scim11ProviderChange": "#/components/schemas/Scim11ProviderChange",
						"Scim20ProviderChange": "#/components/schemas/Scim20ProviderChange",
						"OutboundAttributeChange": "#/components/schemas/OutboundAttributeChange",
						"AuthenticatorInvocationAttempt": "#/components/schemas/AuthenticatorInvocationAttempt"
					},
					"propertyName": "type_name"
				},
				"oneOf": [
					{
						"$ref": "#/components/schemas/UserAuthentication"
					},
					{
						"$ref": "#/components/schemas/OidcInbound"
					},
					{
						"$ref": "#/components/schemas/OidcComplete"
					},
					{
						"$ref": "#/components/schemas/WsFedInbound"
					},
					{
						"$ref": "#/components/schemas/WsFedComplete"
					},
					{
						"$ref": "#/components/schemas/SamlInbound"
					},
					{
						"$ref": "#/components/schemas/SamlComplete"
					},
					{
						"$ref": "#/components/schemas/AddDevice"
					},
					{
						"$ref": "#/components/schemas/Policy"
					},
					{
						"$ref": "#/components/schemas/CreateTenant"
					},
					{
						"$ref": "#/components/schemas/GroupChange"
					},
					{
						"$ref": "#/components/schemas/UserChange"
					},
					{
						"$ref": "#/components/schemas/GroupMembershipChange"
					},
					{
						"$ref": "#/components/schemas/ContinuousAuthentication"
					},
					{
						"$ref": "#/components/schemas/DeviceCredentialChange"
					},
					{
						"$ref": "#/components/schemas/TenantChange"
					},
					{
						"$ref": "#/components/schemas/OIDCClientChange"
					},
					{
						"$ref": "#/components/schemas/ConsoleSsoIdpChange"
					},
					{
						"$ref": "#/components/schemas/ConsoleSsoOIDCAuthConfigChange"
					},
					{
						"$ref": "#/components/schemas/ConsoleSsoSAMLAuthConnectionChange"
					},
					{
						"$ref": "#/components/schemas/SAMLConnectionChange"
					},
					{
						"$ref": "#/components/schemas/OktaDesktopLoginConfigurationChange"
					},
					{
						"$ref": "#/components/schemas/OktaEventHookConfigurationChange"
					},
					{
						"$ref": "#/components/schemas/PolicyChange"
					},
					{
						"$ref": "#/components/schemas/OktaRegistrationAttributeConfigurationChange"
					},
					{
						"$ref": "#/components/schemas/GPGKeyChange"
					},
					{
						"$ref": "#/components/schemas/EnrollmentChange"
					},
					{
						"$ref": "#/components/schemas/RealmChange"
					},
					{
						"$ref": "#/components/schemas/Scim11ProviderChange"
					},
					{
						"$ref": "#/components/schemas/Scim20ProviderChange"
					},
					{
						"$ref": "#/components/schemas/OutboundAttributeChange"
					},
					{
						"$ref": "#/components/schemas/AuthenticatorInvocationAttempt"
					}
				]
			},
			"CreateTenant": {
				"description": "Event recorded when a new tenant is created.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "CreateTenant",
						"type": "string"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"GroupChange": {
				"description": "Event recorded when a group is created, updated, or deleted.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "GroupChange",
						"type": "string"
					},
					"group": {
						"$ref": "#/components/schemas/Group"
					},
					"action": {
						"$ref": "#/components/schemas/GroupChangeAction"
					}
				},
				"required": [
					"action",
					"group",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"UserChange": {
				"description": "Event recorded when a user is created, updated, deleted, activated, or suspended.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "UserChange",
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User_1"
					},
					"action": {
						"$ref": "#/components/schemas/UserChangeAction"
					}
				},
				"required": [
					"action",
					"type_name",
					"user"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"GroupMembershipChange": {
				"description": "Event recorded when a user is added to or removed from a group.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "GroupMembershipChange",
						"type": "string"
					},
					"group": {
						"$ref": "#/components/schemas/Group"
					},
					"user": {
						"$ref": "#/components/schemas/User_1"
					},
					"action": {
						"$ref": "#/components/schemas/GroupMembershipChangeAction"
					}
				},
				"required": [
					"action",
					"group",
					"type_name",
					"user"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"ContinuousAuthentication": {
				"description": "Information about the inbound continuous authentication request.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "ContinuousAuthentication",
						"type": "string"
					},
					"loop_id": {
						"description": "The ID to link events in a single continuous authentication loop.",
						"example": "988080ca-a798-11eb-bcbc-0242ac130002",
						"format": "uuid",
						"type": "string"
					},
					"client": {
						"$ref": "#/components/schemas/ContinuousAuthClient"
					},
					"certificate": {
						"$ref": "#/components/schemas/Certificate_1"
					},
					"user": {
						"$ref": "#/components/schemas/User_1"
					},
					"device_info": {
						"$ref": "#/components/schemas/DeviceInfo_1"
					},
					"continuous_auth_result": {
						"$ref": "#/components/schemas/ContinuousAuthResult"
					}
				},
				"required": [
					"continuous_auth_result",
					"loop_id",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"PolicyResult": {
				"description": "Information about a policy evaluation.",
				"properties": {
					"allow": {
						"description": "Whether a transaction is allowed to proceed.",
						"example": true,
						"type": "boolean"
					},
					"matched_rule_id": {
						"description": "The unique identifier for the rule resulting in this action or \"default\".",
						"example": "44db0f4d-c4f5-41d6-be1c-15a56ca4c803",
						"type": "string"
					},
					"matched_monitor_rule_ids": {
						"description": "List of uuids of monitor rules that were matched during this evaluation.",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"evaluated_policy_id": {
						"description": "The unique identifier for the policy evaluated in this action.",
						"example": "68147ad2-b879-48a0-a1bf-f19b392ef98f",
						"format": "uuid",
						"type": "string"
					},
					"matched_rule_number": {
						"description": "The 1-indexed ordinal number for the rule resulting in this action, or unset for default.",
						"example": 12,
						"type": "integer"
					},
					"policy_version_label": {
						"description": "The version of the policy used by this evaluation as a datetime.",
						"example": "12-27-2021 15:30",
						"type": "string"
					}
				},
				"required": [
					"allow"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"DeviceCredentialChange": {
				"description": "Event recorded when a device credential is created or revoked.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "DeviceCredentialChange",
						"type": "string"
					},
					"certificate": {
						"$ref": "#/components/schemas/Certificate_1"
					},
					"user": {
						"$ref": "#/components/schemas/User_1"
					},
					"device_info": {
						"$ref": "#/components/schemas/DeviceInfo_1"
					},
					"action": {
						"$ref": "#/components/schemas/DeviceCredentialChangeAction"
					}
				},
				"required": [
					"action",
					"certificate",
					"device_info",
					"type_name",
					"user"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"ConsoleSsoIdpChange": {
				"description": "Event recorded when the Console SSO IDP is changed for a tenant's Admin or User Console.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "ConsoleSsoIdpChange",
						"type": "string"
					},
					"console_type": {
						"$ref": "#/components/schemas/ConsoleType"
					},
					"sso_protocol_type": {
						"$ref": "#/components/schemas/SsoProtocolType"
					},
					"id": {
						"description": "The OIDC auth config ID, SAML auth connection ID, or Azure AD Tenant ID of the Console SSO IDP Change.",
						"example": "ddd9ac66-9603-42ee-8fab-b383e6b2555e",
						"type": "string"
					},
					"name": {
						"description": "The name of the OIDC auth config ID, SAML auth connection ID, or Azure AD Tenant ID of the Console SSO IDP Change.",
						"example": "okta-oidc-idp",
						"type": "string"
					}
				},
				"required": [
					"console_type",
					"id",
					"name",
					"sso_protocol_type",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"ConsoleSsoOIDCAuthConfigChange": {
				"description": "Event recorded when a Console OIDC auth config is created, updated, or deleted.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "ConsoleSsoOIDCAuthConfigChange",
						"type": "string"
					},
					"console_type": {
						"$ref": "#/components/schemas/ConsoleType"
					},
					"console_sso_change_type": {
						"$ref": "#/components/schemas/ConsoleSsoChangeType"
					},
					"sso_protocol_type": {
						"$ref": "#/components/schemas/SsoProtocolTypeOidcOnly"
					},
					"id": {
						"description": "The ID of the Console OIDC auth config that action was taken on.",
						"example": "3bab36f0-695d-4644-beda-8d4cd98c0714",
						"type": "string"
					},
					"name": {
						"description": "The name of Console OIDC auth config.",
						"example": "oidc-auth-config",
						"type": "string"
					},
					"issuer": {
						"description": "The issuer of the Console OIDC auth config.",
						"example": "https://okta-123.com",
						"type": "string"
					},
					"client_id": {
						"description": "The client ID of the Console OIDC auth config.",
						"example": "eb101d1ff58a48713b8178867666e7ef",
						"type": "string"
					},
					"token_field": {
						"description": "The token field key of the OIDC ID token that we are verifying identity from.",
						"example": "sub",
						"type": "string"
					},
					"token_field_lookup": {
						"$ref": "#/components/schemas/TokenFieldLookupType"
					}
				},
				"required": [
					"client_id",
					"console_sso_change_type",
					"console_type",
					"id",
					"issuer",
					"name",
					"sso_protocol_type",
					"token_field",
					"token_field_lookup",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"ConsoleSsoSAMLAuthConnectionChange": {
				"description": "Event recorded when a Console SAML auth connection is created, updated, or deleted.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "ConsoleSsoSAMLAuthConnectionChange",
						"type": "string"
					},
					"console_type": {
						"$ref": "#/components/schemas/ConsoleType"
					},
					"console_sso_change_type": {
						"$ref": "#/components/schemas/ConsoleSsoChangeType"
					},
					"sso_protocol_type": {
						"$ref": "#/components/schemas/SsoProtocolTypeSamlOnly"
					},
					"id": {
						"description": "The ID of the Console SAML auth connection that action was taken on.",
						"example": "ddd9ac66-9603-42ee-8fab-b383e6b2555e",
						"type": "string"
					},
					"name": {
						"description": "The name of Console SAML auth connection.",
						"example": "saml-auth-connection",
						"type": "string"
					},
					"idp_url": {
						"description": "The IDP SSO URL of the SAML auth connection.",
						"example": "https://idp.com/sso",
						"type": "string"
					},
					"idp_entity_id": {
						"description": "The IDP entity ID of the SAML auth connection.",
						"example": "https://idp.com",
						"type": "string"
					},
					"subject_user_attribute": {
						"$ref": "#/components/schemas/SubjectUserAttributeType"
					},
					"request_binding": {
						"$ref": "#/components/schemas/RequestBindingType"
					},
					"signing_cert": {
						"description": "The signing cert of the SAML IDP that is used to sign the SAML Response.",
						"example": "-----BEGIN CERTIFICATE-----\nMIIDPjCCAiYCCQCZ6ssULKYLVzANBgkqhkiG9w0BAQsFADBhMQswCQYDVQQGEwJV\nUzELMAkGA1UECAwCTlkxETAPBgNVBAcMCE5ldyBZb3JrMRgwFgYDVQQKDA9CZXlv\nbmQgSWRlbnRpdHkxGDAWBgNVBAsMD0JleW9uZCBJZGVudGl0eTAeFw0yMTA0MjAx\nMzA2MDJaFw0zNjA0MTYxMzA2MDJaMGExCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJO\nWTERMA8GA1UEBwwITmV3IFlvcmsxGDAWBgNVBAoMD0JleW9uZCBJZGVudGl0eTEY\nMBYGA1UECwwPQmV5b25kIElkZW50aXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A\nMIIBCgKCAQEAsjSy/BwbCRb67z1/DTIk1Ea+FrFBrN8s6UX0S/Ul0sEneqEex4k7\nEbuB1ZW9COo7sjQC7j/AU4xhgpIRCnVxpxlag/zulyPivytRhDYCn38A6UvqkhdC\njMUnjAvZihPxRF/y8SOW3edRxeuxEd/QVvwu8FM1C8oIkF8ultaP914gVZiFh/zx\niY+YSQpxGTAPY1IS3ycsnvV6CuBO2w3khQ5sw8xHfEsPeb2JETG+l7yxqg5BN9W/\nuqKKKq8ms6X2YkwiKhXKU1FAUChpZJZ9AwIDAQABMA0GCSqGSIb3DQEBCwUAA4IB\nAQAFeD00GFJpI2UlzOBR/6Sm5dtq28FMWl7B+SiM49WOuDJztDW4YjwU/16Z1h7g\nYnLlQBXxzJan4rb2sGTq6Nc7eHjTg2S7NL/+4mo/Xh84OPEcEXzepHb/BERxJFjJ\nyXdSUHaTPEW0iyvCMrkGz6rR2hB8w3YDJSitVfniaHmphrsNN6EchGnihIKBdLnZ\nrPvXOq3JeeSZKs9P5F9/FDFJiud7IyrsuHfFCMdJ7TXS3j/2ZDfc6eL20SuiAXkc\nzSeC18ZR2rvz5xsyw1S0Lv23QWQbdNnqA2pRRe2Tp9KIjt/3Acnnu+uZu2ClkCFN\n85pDTOF5CbFSqDtDjaw3AVcT\n-----END CERTIFICATE-----\n",
						"type": "string"
					}
				},
				"required": [
					"console_sso_change_type",
					"console_type",
					"id",
					"idp_entity_id",
					"idp_url",
					"name",
					"name_id_format",
					"request_binding",
					"signing_cert",
					"sso_protocol_type",
					"subject_user_attribute",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"TenantChange": {
				"description": "Event recorded when a tenant is modified.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "TenantChange",
						"type": "string"
					},
					"tenant": {
						"$ref": "#/components/schemas/Tenant"
					},
					"action": {
						"$ref": "#/components/schemas/TenantChangeAction"
					}
				},
				"required": [
					"action",
					"tenant",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"OIDCClientChange": {
				"description": "Event recorded when OIDC client configuration is modified.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "OIDCClientChange",
						"type": "string"
					},
					"configuration": {
						"$ref": "#/components/schemas/OIDCClientConfiguration"
					},
					"action": {
						"$ref": "#/components/schemas/OIDCClientChangeAction"
					}
				},
				"required": [
					"action",
					"configuration",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"SAMLConnectionChange": {
				"description": "Event recorded when a SAML connection is modified.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "SAMLConnectionChange",
						"type": "string"
					},
					"configuration": {
						"$ref": "#/components/schemas/SAMLConnectionConfiguration"
					},
					"action": {
						"$ref": "#/components/schemas/SAMLConnectionChangeAction"
					}
				},
				"required": [
					"action",
					"configuration",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"OktaDesktopLoginConfigurationChange": {
				"description": "Event recorded when Okta desktop login configuration is modified.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "OktaDesktopLoginConfigurationChange",
						"type": "string"
					},
					"configuration": {
						"$ref": "#/components/schemas/OktaDesktopLoginConfiguration"
					},
					"action": {
						"$ref": "#/components/schemas/OktaDesktopLoginConfigurationChangeAction"
					}
				},
				"required": [
					"action",
					"configuration",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"OktaEventHookConfigurationChange": {
				"description": "Event recorded when Okta event hook configuration is modified.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "OktaEventHookConfigurationChange",
						"type": "string"
					},
					"configuration": {
						"$ref": "#/components/schemas/OktaEventHookConfiguration"
					},
					"action": {
						"$ref": "#/components/schemas/OktaEventHookConfigurationChangeAction"
					}
				},
				"required": [
					"action",
					"configuration",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"PolicyChange": {
				"description": "Information about a policy update.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "PolicyChange",
						"type": "string"
					},
					"old_policy": {
						"$ref": "#/components/schemas/PolicyRecord"
					},
					"new_policy": {
						"$ref": "#/components/schemas/PolicyRecord"
					}
				},
				"required": [
					"new_policy",
					"old_policy",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"OktaRegistrationAttributeConfigurationChange": {
				"description": "Event recorded when Okta registration attribute configuration is modified.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "OktaRegistrationAttributeConfigurationChange",
						"type": "string"
					},
					"configuration": {
						"$ref": "#/components/schemas/OktaRegistrationAttributeConfiguration"
					},
					"action": {
						"$ref": "#/components/schemas/OktaRegistrationAttributeConfigurationChangeAction"
					}
				},
				"required": [
					"action",
					"configuration",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"GPGKeyChange": {
				"description": "Event recorded when a GPG key is modified.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "GPGKeyChange",
						"type": "string"
					},
					"key": {
						"$ref": "#/components/schemas/GPGKey"
					},
					"action": {
						"$ref": "#/components/schemas/GPGKeyChangeAction"
					}
				},
				"required": [
					"action",
					"key",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"EnrollmentChange": {
				"description": "Event recorded when a user enrollment is modified.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "EnrollmentChange",
						"type": "string"
					},
					"enrollment": {
						"$ref": "#/components/schemas/Enrollment"
					},
					"action": {
						"$ref": "#/components/schemas/EnrollmentChangeAction"
					}
				},
				"required": [
					"action",
					"enrollment",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"RealmChange": {
				"description": "Event recorded when a realm is modified.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "RealmChange",
						"type": "string"
					},
					"realm": {
						"$ref": "#/components/schemas/Realm"
					},
					"action": {
						"$ref": "#/components/schemas/RealmChangeAction"
					}
				},
				"required": [
					"action",
					"realm",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"Scim11ProviderChange": {
				"description": "Event recorded when a SCIM 1.1 provider is modified.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "Scim11ProviderChange",
						"type": "string"
					},
					"scim11_provider": {
						"$ref": "#/components/schemas/SCIM11Provider"
					},
					"action": {
						"$ref": "#/components/schemas/Scim11ProviderChangeAction"
					}
				},
				"required": [
					"action",
					"scim11_provider",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"Scim20ProviderChange": {
				"description": "Event recorded when a SCIM 2.0 provider is modified.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "Scim20ProviderChange",
						"type": "string"
					},
					"scim20_provider": {
						"$ref": "#/components/schemas/SCIM20Provider"
					},
					"action": {
						"$ref": "#/components/schemas/Scim20ProviderChangeAction"
					}
				},
				"required": [
					"action",
					"scim20_provider",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"OutboundAttributeChange": {
				"description": "Event recorded when user synchronized with outbound scim server",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "OutboundAttributeChange",
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User_1"
					},
					"attributes": {
						"additionalProperties": {
							"type": "string"
						},
						"description": "Attributes and their values.",
						"type": "object"
					},
					"action": {
						"$ref": "#/components/schemas/OutboundAttributeChangeAction"
					}
				},
				"required": [
					"action",
					"attribute_value",
					"type_name",
					"user"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"AuthenticatorInvocationAttempt": {
				"description": "Emitted when an attempt to invoke the platform authenticator is made.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "AuthenticatorInvocationAttempt",
						"type": "string"
					},
					"method": {
						"$ref": "#/components/schemas/AuthenticatorInvocationMethod"
					},
					"state": {
						"$ref": "#/components/schemas/AuthenticatorInvocationAttemptState"
					},
					"user_agent": {
						"description": "If the attempt came from browser javascript, the browser's self-reported user agent gotten via `navigator.userAgent`.",
						"example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.60 Safari/537.36",
						"type": "string"
					}
				},
				"required": [
					"method",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true,
				"x-bi-claimed": true
			},
			"UserAuthentication": {
				"description": "User's authentication data.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "UserAuthentication",
						"type": "string"
					},
					"certificate": {
						"$ref": "#/components/schemas/Certificate"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"device_info": {
						"$ref": "#/components/schemas/DeviceInfo"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"OidcInbound": {
				"description": "Information about the inbound OIDC request.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "OidcInbound",
						"type": "string"
					},
					"client": {
						"$ref": "#/components/schemas/Client"
					},
					"scope": {
						"description": "What access privileges are being requested.",
						"example": "openid",
						"type": "string"
					},
					"response_type": {
						"description": "The OpenID connect flow.",
						"example": "code",
						"type": "string"
					},
					"redirect_uri": {
						"description": "Redirection URI to which the response will be sent.",
						"example": "bro.okta.com",
						"type": "string"
					},
					"state": {
						"description": "Random value to retain state between request and callback.",
						"example": "396bda2f9cow483a",
						"type": "string"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"OidcComplete": {
				"description": "The OIDC transaction is completed.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "OidcComplete",
						"type": "string"
					},
					"auth_result": {
						"$ref": "#/components/schemas/AuthResult"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"WsFedInbound": {
				"description": "Information about the inbound WS-Federation request.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "WsFedInbound",
						"type": "string"
					},
					"client": {
						"$ref": "#/components/schemas/Client"
					},
					"wa": {
						"description": "Must have value wsignin1.0.",
						"example": "wsignin1.0",
						"type": "string"
					},
					"wtrealm": {
						"description": "Realm of the relying party.",
						"example": "rp1",
						"type": "string"
					},
					"wct": {
						"description": "Timestamp of the message.",
						"example": "10-23-26 02:31:29,573",
						"type": "string"
					},
					"wctx": {
						"description": "Context to be round tripped back to the relying party.",
						"example": "fasjw8ej8eci3ecojakmasdf",
						"type": "string"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"WsFedComplete": {
				"description": "The WS-Federation transaction is completed.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "WsFedComplete",
						"type": "string"
					},
					"post_url": {
						"description": "URL that the SAML token will be posted to.",
						"example": "https://sso.exampleadfs.com/adfs/ls/",
						"type": "string"
					},
					"auth_result": {
						"$ref": "#/components/schemas/AuthResult"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"SamlInbound": {
				"description": "Information about the inbound SAML request.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "SamlInbound",
						"type": "string"
					},
					"client": {
						"$ref": "#/components/schemas/Client"
					},
					"issuer": {
						"description": "Who the request is coming from (i.e., the SP entity ID).",
						"example": "http://sp.example.com/demo1/metadata.php",
						"type": "string"
					},
					"destination": {
						"description": "Where the request is going to.",
						"example": "http://sp.example.com/demo1/index.php?acs",
						"type": "string"
					},
					"issue_instant": {
						"description": "When the request was issued (in nanoseconds since Unix epoch).",
						"example": 12345678908828,
						"format": "int64",
						"type": "integer"
					},
					"assertion_consumer_service_url": {
						"description": "Where the auth server should send the response back.",
						"example": "http://www.w3.org/2001/XMLSchema-instance",
						"type": "string"
					},
					"id": {
						"description": "The ID of the SAML request.",
						"example": "sj8wfejf84jfw",
						"type": "string"
					},
					"relay_state": {
						"description": "Relay state of the request.",
						"example": "http://sp.example.com/relaystate",
						"type": "string"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"SamlComplete": {
				"description": "The SAML transaction is completed.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "SamlComplete",
						"type": "string"
					},
					"auth_result": {
						"$ref": "#/components/schemas/AuthResult"
					},
					"connection_id": {
						"description": "Connection ID of the SAML response.",
						"example": "ONELOGIN_809707f0030a5d00620c9d9df97f627afe9dcc24",
						"type": "string"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"AddDevice": {
				"description": "Event recorded when a device is added.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "AddDevice",
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"grantor": {
						"$ref": "#/components/schemas/AddDeviceGrantor"
					},
					"device_added": {
						"$ref": "#/components/schemas/Device"
					},
					"result": {
						"$ref": "#/components/schemas/AddDevice_result"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"AddDeviceResultStatus": {
				"description": "Status of the add device transaction.",
				"enum": [
					"SUCCESS",
					"UNAUTHORIZED"
				],
				"example": "SUCCESS",
				"type": "string",
				"x-bi-v0": true
			},
			"Policy": {
				"description": "Policy evaluation data.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "Policy",
						"type": "string"
					},
					"message": {
						"description": "Message sent when DENY is the policy action.",
						"example": "",
						"type": "string"
					},
					"action": {
						"$ref": "#/components/schemas/PolicyAction"
					},
					"result": {
						"$ref": "#/components/schemas/PolicyResult"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"PolicyAction": {
				"description": "The result of evaluating a policy rule.",
				"enum": [
					"ALLOW",
					"DENY",
					"PROVE"
				],
				"example": "ALLOW",
				"type": "string",
				"x-bi-v0": true
			},
			"Client": {
				"description": "Information pertaining to the platform authenticator request.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "Client",
						"type": "string"
					},
					"user_agent": {
						"description": "User agent.",
						"example": "Mozilla/5.0 (Macintosh; Intel Mac OS X x.y; rv:42.0) Gecko/20100101 Firefox/42.0",
						"type": "string"
					},
					"referer_host": {
						"description": "Host of the page to send the response.",
						"example": "developer.mozilla.org",
						"type": "string"
					},
					"auth_origin_host": {
						"description": "Host of the page making the request.",
						"example": "developer.mozilla.org",
						"type": "string"
					},
					"source_ip": {
						"description": "Source IP.",
						"example": "1.1.1.1",
						"type": "string"
					},
					"city": {
						"description": "The city where the request originates.",
						"example": "Seattle",
						"type": "string"
					},
					"country": {
						"description": "The country where the request originates.",
						"example": "USA",
						"type": "string"
					},
					"geo_display": {
						"description": "The display name of the geographical location of the request.",
						"example": "Seattle, USA",
						"type": "string"
					},
					"subdivisions": {
						"description": "Further geographical subdivisions.",
						"example": [
							"Washington"
						],
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"source_ips": {
						"description": "The list of source IPs.",
						"example": [
							"1.1.1.1",
							"127.0.0.1/32"
						],
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"authenticator_ip": {
						"description": "IP of the device with the authenticator application.",
						"example": "1.1.1.1",
						"type": "string"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"AuthResult": {
				"description": "The result of the authentication flow.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "AuthResult",
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/AuthResultStatus"
					},
					"message": {
						"description": "Failure message if unauthorized.",
						"example": "",
						"type": "string"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"AuthResultStatus": {
				"description": "The ultimate status of authentication (SUCCESS, UNAUTHORIZED).",
				"enum": [
					"SUCCESS",
					"UNAUTHORIZED",
					"TIMEOUT"
				],
				"example": "SUCCESS",
				"type": "string",
				"x-bi-v0": true
			},
			"UserStatus": {
				"description": "The user's status (ACTIVE, SUSPENDED, DELETED).",
				"enum": [
					"ACTIVE",
					"SUSPENDED",
					"DELETED"
				],
				"example": "SUSPENDED",
				"type": "string",
				"x-bi-v0": true
			},
			"User": {
				"description": "User data.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "User",
						"type": "string"
					},
					"external_id": {
						"description": "The user's external ID.",
						"example": "asdfwe8nwckwjencw827n293jn",
						"type": "string"
					},
					"email": {
						"description": "The user's email address.",
						"example": "chad@bro.co",
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/UserStatus"
					},
					"user_display": {
						"description": "The user's display name.",
						"example": "Tyler Chad Braddington IV",
						"type": "string"
					},
					"user_name": {
						"description": "The user's name.",
						"example": "chad@bro.co",
						"type": "string"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"Certificate": {
				"description": "Device certificate information.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "Certificate",
						"type": "string"
					},
					"id": {
						"deprecated": true,
						"description": "The ID of the certificate. Deprecated in favor of uuid.",
						"example": 390625,
						"format": "int64",
						"type": "integer"
					},
					"uuid": {
						"description": "The ID of the certificate.",
						"example": "988080ca-a798-11eb-bcbc-0242ac130002",
						"format": "uuid",
						"type": "string"
					},
					"fingerprint": {
						"description": "Certificate fingerprint.",
						"example": "e2ab4a55503857487a95f59a4d1a4d4jd8sox92dbfc7f374c12f0807a0e86bf2",
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/CertificateStatus"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"CertificateStatus": {
				"description": "Status of the certificate (ACTIVE, DELETED).",
				"enum": [
					"ACTIVE",
					"DELETED",
					"UNSET"
				],
				"example": "DELETED",
				"type": "string",
				"x-bi-v0": true
			},
			"AddDeviceGrantor": {
				"description": "Either the enrollment code for a brand new device,\nor an extension from another device.\n",

				"oneOf": [
					{
						"$ref": "#/components/schemas/Device"
					},
					{
						"$ref": "#/components/schemas/EnrollmentCode"
					}
				],
				"type": "object",
				"x-bi-v0": true
			},
			"Device": {
				"description": "Information about a registered device.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "Device",
						"type": "string"
					},
					"certificate": {
						"$ref": "#/components/schemas/Certificate"
					},
					"device_info": {
						"$ref": "#/components/schemas/DeviceInfo"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"DeviceInfo": {
				"description": "Information about the actual device running the authenticator application.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "DeviceInfo",
						"type": "string"
					},
					"authenticator": {
						"$ref": "#/components/schemas/Authenticator"
					},
					"platform_device_info": {
						"$ref": "#/components/schemas/PlatformDeviceInfo"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"EnrollmentCode": {
				"description": "Used when a user first enrolls a device with their identity.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "EnrollmentCode",
						"type": "string"
					},
					"email_address": {
						"description": "Only set if the code was delivered by email.",
						"example": "chad@bro.co",
						"type": "string"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"Authenticator": {
				"description": "Information about the actual authenticator application running on the device.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "Authenticator",
						"type": "string"
					},
					"app_instance_id": {
						"description": "The ID of the particular instance of the authenticator application.",
						"example": "win-c757faeb-3wdj-sk342-cwis-18djvv9eddkq",
						"type": "string"
					},
					"app_version": {
						"description": "The version of the authenticator.",
						"example": "2.31.1",
						"type": "string"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"PlatformDeviceInfo": {
				"description": "The particular device info.",
				
				"oneOf": [
					{
						"$ref": "#/components/schemas/MacOsDeviceInfo"
					},
					{
						"$ref": "#/components/schemas/WindowsDeviceInfo"
					},
					{
						"$ref": "#/components/schemas/IosDeviceInfo"
					},
					{
						"$ref": "#/components/schemas/AndroidDeviceInfo"
					},
					{
						"$ref": "#/components/schemas/LinuxDeviceInfo"
					},
					{
						"$ref": "#/components/schemas/WebDeviceInfo"
					}
				],
				"type": "object",
				"x-bi-v0": true
			},
			"LinuxDeviceInfo": {
				"description": "Information about the device running Linux.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "LinuxDeviceInfo",
						"type": "string"
					},
					"hardware": {
						"$ref": "#/components/schemas/LinuxDeviceInfo_hardware"
					},
					"os": {
						"$ref": "#/components/schemas/LinuxDeviceInfo_os"
					},
					"disks": {
						"description": "A description of disks attached to this Linux device.",
						"items": {
							"$ref": "#/components/schemas/LinuxDisk"
						},
						"type": "array"
					},
					"security": {
						"$ref": "#/components/schemas/LinuxDeviceInfo_security"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"MacOsDeviceInfo": {
				"description": "Information about the device running MacOS.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "MacOsDeviceInfo",
						"type": "string"
					},
					"crowdstrike_agent_id": {
						"description": "Crowdstrike agent ID, if available.",
						"example": "eb2990101dc745e891278d4707be060c",
						"type": "string"
					},
					"hardware": {
						"$ref": "#/components/schemas/MacOsDeviceInfo_hardware"
					},
					"os": {
						"$ref": "#/components/schemas/MacOsDeviceInfo_os"
					},
					"disks": {
						"description": "A description of disks attached to this MacOS device",
						"items": {
							"$ref": "#/components/schemas/MacOsDisk"
						},
						"type": "array"
					},
					"installed_applications": {
						"description": "Recognized subset of applications installed on the MacOS device.",
						"items": {
							"$ref": "#/components/schemas/InstalledApplication"
						},
						"type": "array"
					},
					"security": {
						"$ref": "#/components/schemas/MacOsDeviceInfo_security"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"FileVaultStatus": {
				"description": "File Vault is on or off.",
				"enum": [
					"ON",
					"OFF"
				],
				"example": "true",
				"type": "string",
				"x-bi-v0": true
			},
			"MacOsDisk": {
				"description": "Information about a particular disk on a MacOS device.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "MacOsDisk",
						"type": "string"
					},
					"name": {
						"description": "Name of the disk.",
						"example": "Macintosh HD",
						"type": "string"
					},
					"is_removable": {
						"description": "Is the disk removable, e.g., is it a flash drive?",
						"example": false,
						"type": "boolean"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"MacOsSecuritySoftware": {
				"description": "Name and status of a piece of security software running on a MacOS device.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "MacOsSecuritySoftware",
						"type": "string"
					},
					"name": {
						"description": "Name of the software.",
						"example": "XProtect",
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/MacOsSecuritySoftwareStatus"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"MacOsSecuritySoftwareStatus": {
				"description": "Whether this software is enabled or not.",
				"enum": [
					"ON",
					"OFF"
				],
				"example": "true",
				"type": "string",
				"x-bi-v0": true
			},
			"WindowsDeviceInfo": {
				"description": "Information about the device running Windows.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "WindowsDeviceInfo",
						"type": "string"
					},
					"crowdstrike_agent_id": {
						"description": "Crowdstrike agent ID, if available.",
						"example": "eb2990101dc745e891278d4707be060c",
						"type": "string"
					},
					"hardware": {
						"$ref": "#/components/schemas/WindowsDeviceInfo_hardware"
					},
					"os": {
						"$ref": "#/components/schemas/WindowsDeviceInfo_os"
					},
					"disks": {
						"description": "A description of disks attached to this Windows device.",
						"items": {
							"$ref": "#/components/schemas/WindowsDisk"
						},
						"type": "array"
					},
					"security": {
						"$ref": "#/components/schemas/WindowsDeviceInfo_security"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"InstalledApplication": {
				"description": "Installed application.",
				"properties": {
					"architecture": {
						"$ref": "#/components/schemas/ApplicationArchitecture"
					},
					"identifier": {
						"description": "Application identifier.",
						"example": "com.jamf.management.daemon",
						"type": "string"
					},
					"name": {
						"description": "Application name.",
						"example": "Jamf Pro Daemon",
						"type": "string"
					},
					"version": {
						"description": "Application version.",
						"example": "1.88",
						"type": "string"
					},
					"publisher": {
						"description": "Application publisher.",
						"example": "Jamf, Inc.",
						"type": "string"
					},
					"install_location": {
						"description": "Where the application is installed.",
						"example": "/Library/Application Support/JAMF",
						"type": "string"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"ApplicationArchitecture": {
				"description": "Instruction set architecture for the application.",
				"enum": [
					"UNSUPPORTED",
					"UNKNOWN",
					"32_BITS",
					"64_BITS"
				],
				"example": "32_BITS",
				"type": "string",
				"x-bi-v0": true
			},
			"LinuxDisk": {
				"description": "Information about a particular disk on a Windows device.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "LinuxDisk",
						"type": "string"
					},
					"name": {
						"description": "Disk name.",
						"example": "blah",
						"type": "string"
					},
					"is_removable": {
						"description": "Is the disk removable, e.g., is it a flash drive?",
						"example": false,
						"type": "boolean"
					},
					"is_encrypted": {
						"description": "Is the disk encrypted using LUKS?",
						"example": false,
						"type": "boolean"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"WindowsDisk": {
				"description": "Information about a particular disk on a Windows device.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "WindowsDisk",
						"type": "string"
					},
					"name": {
						"description": "Disk name.",
						"example": "blah",
						"type": "string"
					},
					"is_system_drive": {
						"description": "Is a system drive.",
						"example": false,
						"type": "boolean"
					},
					"is_bitlocker_enabled": {
						"description": "Bitlocker drive encryption is enabled.",
						"example": true,
						"type": "boolean"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"WindowsSecuritySoftware": {
				"description": "Name and status of a piece of security software running on a Windows device.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "WindowsSecuritySoftware",
						"type": "string"
					},
					"name": {
						"description": "Name of the software.",
						"example": "CrowdStrike Falcon Sensor",
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/WindowsSecuritySoftwareStatus"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"WindowsSecuritySoftwareStatus": {
				"description": "Whether this software is enabled or not.",
				"enum": [
					"ON",
					"OFF",
					"SNOOZED",
					"EXPIRED"
				],
				"example": "true",
				"type": "string",
				"x-bi-v0": true
			},
			"IosDeviceInfo": {
				"description": "Information about the device running iOS.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "IosDeviceInfo",
						"type": "string"
					},
					"hardware": {
						"$ref": "#/components/schemas/IosDeviceInfo_hardware"
					},
					"os": {
						"$ref": "#/components/schemas/IosDeviceInfo_os"
					},
					"security": {
						"$ref": "#/components/schemas/IosDeviceInfo_security"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"AndroidDeviceInfo": {
				"description": "Information about the device running Android.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "AndroidDeviceInfo",
						"type": "string"
					},
					"hardware": {
						"$ref": "#/components/schemas/AndroidDeviceInfo_hardware"
					},
					"os": {
						"$ref": "#/components/schemas/AndroidDeviceInfo_os"
					},
					"security": {
						"$ref": "#/components/schemas/AndroidDeviceInfo_security"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"WebDeviceInfo": {
				"description": "Information about the running Web Browser.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "WebDeviceInfo",
						"type": "string"
					},
					"security": {
						"$ref": "#/components/schemas/WebDeviceInfo_security"
					},
					"user_agent": {
						"description": "The User Agent string of the Web Browser.",
						"example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36",
						"type": "string"
					},
					"browser": {
						"$ref": "#/components/schemas/WebDeviceInfo_browser"
					},
					"platform": {
						"$ref": "#/components/schemas/WebDeviceInfo_platform"
					},
					"device": {
						"$ref": "#/components/schemas/WebDeviceInfo_device"
					},
					"client_data": {
						"$ref": "#/components/schemas/WebDeviceInfo_client_data"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"Group": {
				"description": "A group of users.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "Group",
						"type": "string"
					},
					"id": {
						"description": "The id of the group.",
						"example": "2efacfd7-e29d-4ed5-931b-13001f1bd61f",
						"type": "string"
					},
					"name": {
						"description": "The name of the group.",
						"example": "Group Name",
						"type": "string"
					},
					"description": {
						"description": "The description of the group.",
						"example": "This is a group of users.",
						"type": "string"
					},
					"source": {
						"description": "The system which created the group.",
						"example": "BeyondIdentity",
						"type": "string"
					}
				},
				"required": [
					"description",
					"id",
					"name",
					"source",
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"GroupChangeAction": {
				"description": "The action taken on a group.",
				"enum": [
					"CREATE",
					"UPDATE",
					"DELETE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"UserChangeAction": {
				"description": "The action taken on a user.",
				"enum": [
					"CREATE",
					"UPDATE",
					"DELETE",
					"SUSPEND",
					"ACTIVATE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"GroupMembershipChangeAction": {
				"description": "Indicates whether a user was added to or removed from a group.",
				"enum": [
					"ADD",
					"REMOVE"
				],
				"example": "ADD",
				"type": "string",
				"x-bi-v0": true
			},
			"ContinuousAuthClient": {
				"description": "Information pertaining to the platform authenticator request.",
				"properties": {
					"authenticator_ip": {
						"description": "IP of the device with the authenticator application.",
						"example": "1.1.1.1",
						"type": "string"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"ContinuousAuthResult": {
				"description": "The result of the continuous authentication call.",
				"properties": {
					"status": {
						"$ref": "#/components/schemas/ContinuousAuthStatus"
					},
					"message": {
						"description": "Failure message if unauthorized; customizable if denied by a policy rule.",
						"example": "Policy Denied - Please enable your firewall.",
						"type": "string"
					},
					"policy_result": {
						"$ref": "#/components/schemas/PolicyResult"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"ContinuousAuthStatus": {
				"description": "The ultimate status of a continuous authentication (ALLOW, USER_INACTIVE, DEVICE_INACTIVE, POLICY_DENY).",
				"enum": [
					"ALLOW",
					"USER_INACTIVE",
					"DEVICE_INACTIVE",
					"POLICY_DENY"
				],
				"example": "ALLOW",
				"type": "string",
				"x-bi-v0": true
			},
			"DeviceCredentialChangeAction": {
				"description": "Indicates whether a device credential was created or revoked.",
				"enum": [
					"CREATE",
					"REVOKE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"ConsoleType": {
				"description": "The type of console that the action was taken on.",
				"enum": [
					"ADMIN",
					"USER"
				],
				"example": "ADMIN",
				"type": "string",
				"x-bi-v0": true
			},
			"SsoProtocolType": {
				"description": "The SSO protocol type that was affected by the action.",
				"enum": [
					"OIDC",
					"SAML",
					"AZURE_AD_OIDC"
				],
				"example": "OIDC",
				"type": "string",
				"x-bi-v0": true
			},
			"ConsoleSsoChangeType": {
				"description": "The action type that was taken on the Console SSO config change.",
				"enum": [
					"CREATE",
					"UPDATE",
					"DELETE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"SsoProtocolTypeOidcOnly": {
				"description": "The SSO protocol type that was affected by the action.",
				"enum": [
					"OIDC"
				],
				"example": "OIDC",
				"type": "string",
				"x-bi-v0": true
			},
			"TokenFieldLookupType": {
				"description": "The attribute within the Beyond Identity directory that the OIDC ID token field value will be asserted against to verify identity.",
				"enum": [
					"USER_NAME",
					"EXTERNAL_ID",
					"EMAIL",
					"STATUS"
				],
				"example": "USER_NAME",
				"type": "string",
				"x-bi-v0": true
			},
			"SsoProtocolTypeSamlOnly": {
				"description": "The SSO protocol type that was affected by the action.",
				"enum": [
					"SAML"
				],
				"example": "SAML",
				"type": "string",
				"x-bi-v0": true
			},
			"SubjectUserAttributeType": {
				"description": "The attribute within the Beyond Identity directory that the SAML Response's subject will be asserted against to verify identity.",
				"enum": [
					"USER_NAME",
					"EXTERNAL_ID",
					"EMAIL",
					"DISPLAY_NAME"
				],
				"example": "USER_NAME",
				"type": "string",
				"x-bi-v0": true
			},
			"RequestBindingType": {
				"description": "The SAML request binding type is how the SAML AuthnRequest will be sent to the SAML IDP.",
				"enum": [
					"HTTP_REDIRECT",
					"HTTP_POST"
				],
				"example": "HTTP_REDIRECT",
				"type": "string",
				"x-bi-v0": true
			},
			"Tenant": {
				"description": "Information about a tenant.",
				"properties": {
					"id": {
						"description": "The unique id of the tenant.",
						"example": "test-acme-corp",
						"type": "string"
					},
					"classification": {
						"description": "Informational classification of the tenant.",
						"example": "TC_CUSTOMER",
						"type": "string"
					},
					"date_created": {
						"description": "UTC timestamp of when the tenant was created.",
						"example": "2022-02-03 13:51:12.823773 +0000 +0000",
						"type": "string"
					},
					"profile_handle": {
						"description": "A unique string that identifies the tenant.",
						"example": "test-acme-corp",
						"type": "string"
					},
					"profile_logo_uri": {
						"description": "URI of an image to be displayed for this tenant.",
						"example": "http://app.net/logos/logo.png",
						"type": "string"
					},
					"profile_display_name": {
						"description": "Friendly display name of the tenant.",
						"example": "Acme Pay",
						"type": "string"
					},
					"enrollment_email_template_id": {
						"description": "Sendgrid template ID for enrollment emails.",
						"example": "d-ac946ef83a544f0fa041d7d3f8e6a834",
						"type": "string"
					},
					"app_enroll_uri": {
						"description": "The uri in which users can be redirected to in order to enroll.",
						"example": "http://app.net/#/enroll",
						"type": "string"
					},
					"app_login_uri": {
						"description": "The uri in which users can be redirected to in order to login.",
						"example": "http://app.net/#/login",
						"type": "string"
					},
					"enable_roaming_authentication": {
						"description": "Indictates whether or not roaming authentication should appear as a fallback case during authentication.",
						"example": true,
						"type": "boolean"
					},
					"registration_redirect_uri": {
						"description": "URI that specifies where the registration link should redirect to when the user clicks/taps on it.",
						"example": "http://app.net/#/registration",
						"type": "string"
					},
					"support_email": {
						"description": "The support email of the tenant.",
						"example": "support-acmepay@beyondidentity.com",
						"type": "string"
					}
				},
				"required": [
					"classification",
					"date_created",
					"enable_roaming_authentication",
					"enrollment_email_template_id",
					"id",
					"profile_display_name",
					"profile_handle",
					"profile_logo_uri"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"TenantChangeAction": {
				"description": "Describes the action taken on the tenant.",
				"enum": [
					"UPDATE"
				],
				"example": "UPDATE",
				"type": "string",
				"x-bi-v0": true
			},
			"OIDCClientConfiguration": {
				"description": "Information about an OIDC client configuration.",
				"properties": {
					"id": {
						"description": "The unique id of the OIDC client configuration.",
						"example": "dd58e65d-bd52-4450-a990-238d6251a12a",
						"type": "string"
					},
					"name": {
						"description": "The name of the OIDC client configuration.",
						"example": "User Portal",
						"type": "string"
					},
					"redirect_uris": {
						"description": "The redirect URIs to which an authorization code can be routed.",
						"example": [
							"https://app.net/callback"
						],
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"id_token_signed_response_alg": {
						"$ref": "#/components/schemas/IdTokenSignedResponseAlg"
					},
					"token_endpoint_auth_method": {
						"description": "The client authentication method used to request an access token.",
						"example": "client_secret_post",
						"type": "string"
					}
				},
				"required": [
					"id",
					"id_token_signed_response_alg",
					"name",
					"redirect_uris",
					"token_endpoint_auth_method"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"IdTokenSignedResponseAlg": {
				"description": "The algorithm used to sign the JWT that authenticates the client.",
				"enum": [
					"RS256",
					"ES256"
				],
				"example": "RS256",
				"type": "string",
				"x-bi-v0": true
			},
			"OIDCClientChangeAction": {
				"description": "Describes the action taken on the OIDC client.",
				"enum": [
					"CREATE",
					"UPDATE",
					"DELETE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"SAMLConnectionConfiguration": {
				"description": "Information about a SAML connection configuration.",
				"properties": {
					"id": {
						"description": "The unique id of the SAML connection.",
						"example": "41bb7234-db9b-4c9f-8341-1e865aee98ff",
						"type": "string"
					},
					"name": {
						"description": "The name of the SAML connection",
						"example": "SAML",
						"type": "string"
					},
					"sp_url": {
						"description": "The location where the SAML Response is sent via HTTP-POST. Often referred to as the SAML Assertion Consumer Service (ACS) URL.",
						"example": "https://app.net/saml/auth",
						"type": "string"
					},
					"sp_entity_id": {
						"description": "The intended audience of the SAML assertion. Often referred to as the SP Audience URI.",
						"example": "https://app.net/idp/issuer",
						"type": "string"
					},
					"subject_name_id_format": {
						"$ref": "#/components/schemas/SubjectNameIdFormat"
					},
					"subject_user_attribute": {
						"$ref": "#/components/schemas/SubjectUserAttribute"
					},
					"sp_binding": {
						"$ref": "#/components/schemas/SpBinding"
					},
					"sign_response": {
						"description": "Indicates whether the SAML Response envelope is digitally signed or not.",
						"example": true,
						"type": "boolean"
					},
					"authn_context_class": {
						"$ref": "#/components/schemas/AuthnContextClass"
					},
					"sp_public_cert": {
						"description": "The PEM encoded public key certificate of the Service Provider used to verify SAML requests.",
						"type": "string"
					},
					"attribute_statements": {
						"description": "Additional user attributes sent in SAML assertion.",
						"items": {
							"$ref": "#/components/schemas/AttributeStatement"
						},
						"type": "array"
					}
				},
				"required": [
					"authn_context_class",
					"id",
					"name",
					"sign_response",
					"sp_binding",
					"sp_url",
					"subject_name_id_format",
					"subject_user_attribute"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"SubjectNameIdFormat": {
				"description": "Name format of the assertion's subject statement.",
				"enum": [
					"unspecified",
					"emailAddress",
					"X509SubjectName",
					"WindowsDomainQualifiedName",
					"kerberos",
					"entity",
					"persistent",
					"transient"
				],
				"example": "persistent",
				"type": "string",
				"x-bi-v0": true
			},
			"SubjectUserAttribute": {
				"description": "The Beyond Identity attribute that is sent in the assertion's subject statement.",
				"enum": [
					"ExternalId",
					"Email",
					"UserName",
					"DisplayName"
				],
				"example": "UserName",
				"type": "string",
				"x-bi-v0": true
			},
			"SpBinding": {
				"description": "Binding for the incoming SAML request.",
				"enum": [
					"http_redirect",
					"http_post"
				],
				"example": "http_redirect",
				"type": "string",
				"x-bi-v0": true
			},
			"AuthnContextClass": {
				"description": "The SAML Authentication Context Class for the assertion's authentication statement.",
				"enum": [
					"X509",
					"IntegratedWindowsFederation",
					"Kerberos",
					"Password",
					"PasswordProtectedTransport",
					"TLSClient",
					"Unspecified"
				],
				"example": "X509",
				"type": "string",
				"x-bi-v0": true
			},
			"AttributeStatement": {
				"description": "A user attribute to be sent in SAML assertions.",
				"properties": {
					"name": {
						"description": "The name of the attribute.",
						"example": "DisplayName",
						"type": "string"
					},
					"name_format": {
						"$ref": "#/components/schemas/AttributeNameFormat"
					},
					"value": {
						"description": "The value of the attribute.",
						"example": "DisplayName",
						"type": "string"
					}
				},
				"required": [
					"name",
					"name_format",
					"value"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"AttributeNameFormat": {
				"description": "The format of the name of the attribute.",
				"enum": [
					"basic",
					"unspecified",
					"uri"
				],
				"example": "basic",
				"type": "string",
				"x-bi-v0": true
			},
			"SAMLConnectionChangeAction": {
				"description": "Describes the action taken on the SAML connection.",
				"enum": [
					"CREATE",
					"UPDATE",
					"DELETE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"OktaDesktopLoginConfiguration": {
				"description": "Information about an Okta desktop login configuration.",
				"properties": {
					"id": {
						"description": "The unique id of the Okta desktop login configuration.",
						"example": "dd58e65d-bd52-4450-a990-238d6251a12a",
						"type": "string"
					},
					"date_created": {
						"description": "UTC timestamp of when the Okta desktop login configuration was created.",
						"example": "2021-12-01T22:54:29.968+0000",
						"type": "string"
					},
					"okta_domain": {
						"description": "The domain name of the Okta desktop login configuration.",
						"example": "acme.okta.com",
						"type": "string"
					},
					"public_key_attr_name": {
						"description": "The public key attribute name used to register desktop login credentials on the Okta user profile.",
						"example": "public_key",
						"type": "string"
					},
					"enabled": {
						"description": "True if the Okta desktop login configuration is enabled, otherwise false.",
						"example": true,
						"type": "boolean"
					}
				},
				"required": [
					"date_created",
					"enabled",
					"id",
					"okta_domain",
					"public_key_attr_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"OktaDesktopLoginConfigurationChangeAction": {
				"description": "Describes the action taken on the Okta desktop login configuration.",
				"enum": [
					"CREATE",
					"UPDATE",
					"DELETE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"OktaEventHookConfiguration": {
				"description": "Information about an Okta event hook configuration.",
				"properties": {
					"id": {
						"description": "The unique id of the Okta event hook configuration.",
						"example": "dd58e65d-bd52-4450-a990-238d6251a12a",
						"type": "string"
					},
					"okta_domain": {
						"description": "The domain name of the Okta event hook configuration.",
						"example": "acme.okta.com",
						"type": "string"
					},
					"okta_group_name": {
						"description": "The Okta group name of the Okta event hook configuration.",
						"example": "Users",
						"type": "string"
					},
					"enabled": {
						"description": "True if the Okta event hook configuration is enabled, otherwise false.",
						"example": true,
						"type": "boolean"
					},
					"date_created": {
						"description": "UTC timestamp of when the Okta event hook configuration was created.",
						"example": "2021-12-01T22:54:29.968+0000",
						"type": "string"
					},
					"date_modified": {
						"description": "UTC timestamp of when the Okta event hook configuration was last modified.",
						"example": "2021-12-01T22:54:29.968+0000",
						"type": "string"
					}
				},
				"required": [
					"date_created",
					"date_modified",
					"enabled",
					"id",
					"okta_domain",
					"okta_group_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"OktaEventHookConfigurationChangeAction": {
				"description": "Describes the action taken on the Okta event hook configuration.",
				"enum": [
					"CREATE",
					"UPDATE",
					"DELETE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"PolicyRecord": {
				"description": "Immutable information about a specific version of a policy.",
				"properties": {
					"id": {
						"description": "The unique ID for this policy version.",
						"example": "f9a079f4-fead-4ffe-ba70-f5f40399b2b2",
						"format": "uuid",
						"type": "string"
					},
					"date_created": {
						"description": "UTC timestamp of when the policy was created.",
						"example": "2021-12-01T22:54:29.968+0000",
						"type": "string"
					}
				},
				"required": [
					"date_created",
					"id",
					"policy"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"OktaRegistrationAttributeConfiguration": {
				"description": "Information about an Okta registration attribute configuration.",
				"properties": {
					"id": {
						"description": "The unique id of the Okta registration attribute configuration.",
						"example": "dd58e65d-bd52-4450-a990-238d6251a12a",
						"type": "string"
					},
					"okta_domain": {
						"description": "The domain name of the Okta registration attribute configuration.",
						"example": "acme.okta.com",
						"type": "string"
					},
					"okta_registration_attribute_name": {
						"description": "The name of the Okta attribute corresponding to the user registration status.",
						"example": "byndidRegistered",
						"type": "string"
					},
					"enabled": {
						"description": "True if the Okta registration attribute configuration is enabled, otherwise false.",
						"example": true,
						"type": "boolean"
					},
					"date_created": {
						"description": "UTC timestamp of when the Okta registration attribute configuration was created.",
						"example": "2021-12-01T22:54:29.968+0000",
						"type": "string"
					},
					"date_modified": {
						"description": "UTC timestamp of when the Okta registration attribute configuration was last modified.",
						"example": "2021-12-01T22:54:29.968+0000",
						"type": "string"
					}
				},
				"required": [
					"date_created",
					"date_modified",
					"enabled",
					"id",
					"okta_domain",
					"okta_registration_attribute_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"OktaRegistrationAttributeConfigurationChangeAction": {
				"description": "Describes the action taken on the Okta registration attribute configuration.",
				"enum": [
					"CREATE",
					"UPDATE",
					"DELETE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"GPGKey": {
				"description": "Information about a GPG key.",
				"properties": {
					"id": {
						"description": "The UUID of the GPG key binding.",
						"example": "9d285eb3-2036-4a68-9395-4dc58497537b",
						"type": "string"
					},
					"name": {
						"description": "The name of the GPG key holder.",
						"example": "John Doe",
						"type": "string"
					},
					"email_address": {
						"description": "The email address of the GPG key holder.",
						"example": "john.doe@beyondidentity.com",
						"type": "string"
					},
					"fingerprint": {
						"description": "The V4 fingerprint of the GPG key, as defined by RFC 4880.",
						"example": "038CBA875A3037DE9DB44D913CB8016B17C33053",
						"type": "string"
					},
					"comment": {
						"description": "A description of the GPG key.",
						"example": "For GitHub",
						"type": "string"
					}
				},
				"required": [
					"email_address",
					"fingerprint",
					"id",
					"name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"GPGKeyChangeAction": {
				"description": "Describes the action taken on the GPG key.",
				"enum": [
					"CREATE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"Enrollment": {
				"description": "A user enrollment record.",
				"properties": {
					"user": {
						"$ref": "#/components/schemas/User_1"
					},
					"status": {
						"$ref": "#/components/schemas/EnrollmentStatus"
					},
					"date_created": {
						"description": "UTC timestamp of when the enrollment record was created.",
						"example": "2022-02-03 13:51:12.979995 +0000 +0000",
						"type": "string"
					},
					"date_modified": {
						"description": "UTC timestamp of when the enrollment record was last modified.",
						"example": "2022-02-03 13:51:12.823773 +0000 +0000",
						"type": "string"
					}
				},
				"required": [
					"date_created",
					"date_modified",
					"status",
					"user"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"EnrollmentStatus": {
				"description": "The status of the enrollment record.",
				"enum": [
					"PENDING",
					"REGISTERED",
					"CANCELED"
				],
				"example": "PENDING",
				"type": "string",
				"x-bi-v0": true
			},
			"EnrollmentChangeAction": {
				"description": "The action taken on an enrollment record.",
				"enum": [
					"CREATE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"Realm": {
				"description": "A realm record.",
				"properties": {
					"id": {
						"description": "The unique id of the realm.",
						"example": "2efacfd7-e29d-4ed5-931b-13001f1bd61f",
						"type": "string"
					},
					"name": {
						"description": "The name of the realm.",
						"example": "acme",
						"type": "string"
					},
					"display_name": {
						"description": "The display name of the realm.",
						"example": "Acme Corp",
						"type": "string"
					},
					"tenant_uuid": {
						"description": "The unique id of the realm's tenant.",
						"example": "347166a3-1c7e-4d0d-92fd-97c72aabec6e",
						"type": "string"
					},
					"create_time": {
						"description": "UTC timestamp of when the realm record was created.",
						"format": "date-time",
						"type": "string"
					}
				},
				"required": [
					"create_time",
					"display_name",
					"id",
					"name",
					"tenant_uuid"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"RealmChangeAction": {
				"description": "The action taken on a realm record.",
				"enum": [
					"CREATE",
					"UPDATE",
					"DELETE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"SCIM11Provider": {
				"description": "Information about a SCIM 1.1 provider.",
				"properties": {
					"id": {
						"description": "The UUID of the SCIM 1.1 provider.",
						"example": "9d285eb3-2036-4a68-9395-4dc58497537b",
						"type": "string"
					},
					"url": {
						"description": "URL of client scim server.",
						"example": "https://www.somecustomer.com/scim",
						"type": "string"
					},
					"authentication_type": {
						"$ref": "#/components/schemas/AuthenticationType"
					},
					"bi_attribute": {
						"$ref": "#/components/schemas/Scim11BIAttribute"
					},
					"scim_attribute": {
						"description": "String representing an attribute within Client.",
						"example": "bi_enabled",
						"type": "string"
					},
					"extension_namespace": {
						"description": "The namespace of the scim attribute.",
						"example": "namespace",
						"type": "string"
					}
				},
				"required": [
					"authentication_type",
					"bi_attribute",
					"extension_namespace",
					"id",
					"scim_attribute",
					"url"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"AuthenticationType": {
				"description": "Type of authentication to use when calling url",
				"enum": [
					"BASIC",
					"CLIENT_CREDENTIALS"
				],
				"example": "[\"BASIC\"]",
				"type": "string",
				"x-bi-v0": true
			},
			"Scim11BIAttribute": {
				"description": "String representing an attribute within Beyond Identity.",
				"enum": [
					"CUSTOM:REGISTERED"
				],
				"example": "CUSTOM:REGISTERED",
				"type": "string",
				"x-bi-v0": true
			},
			"Scim11ProviderChangeAction": {
				"description": "Describes the action taken on the SCIM 1.1 provider.",
				"enum": [
					"CREATE",
					"UPDATE",
					"DELETE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"SCIM20Provider": {
				"description": "Information about a SCIM 2.0 provider.",
				"properties": {
					"id": {
						"description": "The UUID of the SCIM 2.0 provider.",
						"example": "9d285eb3-2036-4a68-9395-4dc58497537b",
						"type": "string"
					},
					"url": {
						"description": "URL of client scim server.",
						"example": "https://www.somecustomer.com/scim",
						"type": "string"
					},
					"authentication_type": {
						"$ref": "#/components/schemas/AuthenticationType"
					},
					"bi_attribute": {
						"$ref": "#/components/schemas/Scim20BIAttribute"
					},
					"scim_attribute": {
						"description": "String representing an attribute within Client.",
						"example": "bi_enabled",
						"type": "string"
					},
					"extension_namespace": {
						"description": "The namespace of the scim attribute.",
						"example": "namespace",
						"type": "string"
					}
				},
				"required": [
					"authentication_type",
					"bi_attribute",
					"extension_namespace",
					"id",
					"scim_attribute",
					"url"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"Scim20BIAttribute": {
				"description": "String representing an attribute within Beyond Identity.",
				"enum": [
					"CUSTOM:REGISTERED"
				],
				"example": "CUSTOM:REGISTERED",
				"type": "string",
				"x-bi-v0": true
			},
			"Scim20ProviderChangeAction": {
				"description": "Describes the action taken on the SCIM 2.0 provider.",
				"enum": [
					"CREATE",
					"UPDATE",
					"DELETE"
				],
				"example": "CREATE",
				"type": "string",
				"x-bi-v0": true
			},
			"OutboundAttributeChangeAction": {
				"description": "Describes the action taken on the attribute.",
				"enum": [
					"UPDATE"
				],
				"example": "UPDATE",
				"type": "string",
				"x-bi-v0": true
			},
			"AuthenticatorInvocationMethod": {
				"description": "The method attempted to invoke the platform authenticator.",
				"enum": [
					"UNKNOWN",
					"COPY",
					"LOCALHOST",
					"ROAMING_AUTH",
					"SCHEME",
					"UNIVERSAL_URL",
					"PIPE",
					"ANDROID_ACCESSIBILITY",
					"ANDROID_AUTOFILL",
					"EMBEDDED"
				],
				"example": "LOCALHOST",
				"type": "string",
				"x-bi-v0": true
			},
			"AuthenticatorInvocationAttemptState": {
				"description": "The state of the authenticator invocation. Some invocation methods require a user to perform an action, represented by this enum. If it is not present, no user action is necessary for the flow type.",
				"enum": [
					"SHOWN",
					"CLICKED"
				],
				"type": "string",
				"x-bi-v0": true
			},
			"User_1": {
				"description": "User data.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "User",
						"type": "string"
					},
					"external_id": {
						"description": "The user's external ID.",
						"example": "asdfwe8nwckwjencw827n293jn",
						"type": "string"
					},
					"email": {
						"description": "The user's email address.",
						"example": "chad@bro.co",
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/UserStatus"
					},
					"user_display": {
						"description": "The user's display name.",
						"example": "Tyler Chad Braddington IV",
						"type": "string"
					},
					"user_name": {
						"description": "The user's name.",
						"example": "chad@bro.co",
						"type": "string"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"Certificate_1": {
				"description": "Device certificate information.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "Certificate",
						"type": "string"
					},
					"id": {
						"deprecated": true,
						"description": "The ID of the certificate. Deprecated in favor of uuid.",
						"example": 390625,
						"format": "int64",
						"type": "integer"
					},
					"uuid": {
						"description": "The ID of the certificate.",
						"example": "988080ca-a798-11eb-bcbc-0242ac130002",
						"format": "uuid",
						"type": "string"
					},
					"fingerprint": {
						"description": "Certificate fingerprint.",
						"example": "e2ab4a55503857487a95f59a4d1a4d4jd8sox92dbfc7f374c12f0807a0e86bf2",
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/CertificateStatus"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"DeviceInfo_1": {
				"description": "Information about the actual device running the authenticator application.",
				"properties": {
					"type_name": {
						"description": "The name of this type.",
						"example": "DeviceInfo",
						"type": "string"
					},
					"authenticator": {
						"$ref": "#/components/schemas/Authenticator"
					},
					"platform_device_info": {
						"$ref": "#/components/schemas/PlatformDeviceInfo"
					}
				},
				"required": [
					"type_name"
				],
				"type": "object",
				"x-bi-v0": true
			},
			"AddDevice_result": {
				"description": "Outcome of adding a new device.",
				"properties": {
					"message": {
						"description": "Status message if UNAUTHORIZED.",
						"example": "",
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/AddDeviceResultStatus"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"LinuxDeviceInfo_hardware": {
				"description": "Hardware identifying information.",
				"properties": {
					"serial_number": {
						"description": "Device system serial number.",
						"example": "C04E8VWD9KM1",
						"type": "string"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"LinuxDeviceInfo_os_version": {
				"description": "Linux OS version.",
				"properties": {
					"major": {
						"description": "Major OS version.",
						"example": 21,
						"format": "int32",
						"type": "integer"
					},
					"minor": {
						"description": "Minor OS version.",
						"example": 4,
						"format": "int32",
						"type": "integer"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"LinuxDeviceInfo_os": {
				"description": "Information about the Linux OS on the device.",
				"properties": {
					"hostname": {
						"description": "Device host.",
						"example": "johns-desktop",
						"type": "string"
					},
					"version": {
						"$ref": "#/components/schemas/LinuxDeviceInfo_os_version"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"LinuxDeviceInfo_security": {
				"description": "Information about security settings on the Linux device.",
				"properties": {
					"is_tpm_available": {
						"description": "The trusted platform module is available.",
						"example": true,
						"type": "boolean"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"MacOsDeviceInfo_hardware": {
				"description": "Hardware identifying information.",
				"properties": {
					"uuid": {
						"description": "Hardware UUID for Mac.",
						"example": "13439BEV8-1944-555V-DEB5-D3W9V9DJ8ECV",
						"type": "string"
					},
					"manufacturer": {
						"description": "Device manufacturer.",
						"example": "Apple",
						"type": "string"
					},
					"model": {
						"description": "The model of the device.",
						"example": "MacBookPro16,1",
						"type": "string"
					},
					"serial_number": {
						"description": "Device system serial number.",
						"example": "C04E8VWD9KM1",
						"type": "string"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"MacOsDeviceInfo_os_version": {
				"description": "MacOS version.",
				"properties": {
					"major": {
						"description": "Major version.",
						"example": 11,
						"format": "int32",
						"type": "integer"
					},
					"minor": {
						"description": "Minor version.",
						"example": 1,
						"format": "int32",
						"type": "integer"
					},
					"build": {
						"description": "Build version.",
						"example": "20C63",
						"type": "string"
					},
					"patch": {
						"description": "Patch version.",
						"example": 7,
						"format": "int32",
						"type": "integer"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"MacOsDeviceInfo_os": {
				"description": "Information about the MacOS version.",
				"properties": {
					"hostname": {
						"description": "Device host.",
						"example": "V02Q33SWOD6C",
						"type": "string"
					},
					"version": {
						"$ref": "#/components/schemas/MacOsDeviceInfo_os_version"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"MacOsDeviceInfo_security": {
				"description": "Information about security settings on the MacOS device.",
				"properties": {
					"password_set": {
						"description": "Is the password set?",
						"example": true,
						"type": "boolean"
					},
					"biometrics_set": {
						"description": "Is biometrics set?",
						"example": true,
						"type": "boolean"
					},
					"watch_authentication_set": {
						"description": "Is watch authentication enabled?",
						"example": true,
						"type": "boolean"
					},
					"secure_enclave_available": {
						"description": "Is the secure enclave available?",
						"example": true,
						"type": "boolean"
					},
					"file_vault_status": {
						"$ref": "#/components/schemas/FileVaultStatus"
					},
					"security_software": {
						"description": "Array of security software and status of the software.",
						"items": {
							"$ref": "#/components/schemas/MacOsSecuritySoftware"
						},
						"type": "array"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"WindowsDeviceInfo_hardware": {
				"description": "Hardware identifying information.",
				"properties": {
					"manufacturer": {
						"description": "Device manufacturer.",
						"example": "Microsoft",
						"type": "string"
					},
					"model": {
						"description": "The model of the device.",
						"example": "Lenova ThinkBook 14",
						"type": "string"
					},
					"serial_number": {
						"description": "Device system serial number.",
						"example": "C04E8VWD9KM1",
						"type": "string"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"WindowsDeviceInfo_os_version": {
				"description": "Windows OS version.",
				"properties": {
					"major": {
						"description": "Major version.",
						"example": 10,
						"format": "int32",
						"type": "integer"
					},
					"minor": {
						"description": "Minor version.",
						"example": 1,
						"format": "int32",
						"type": "integer"
					},
					"build": {
						"description": "Build version.",
						"example": "18362.356",
						"type": "string"
					},
					"revision": {
						"description": "Revision version.",
						"example": 7,
						"format": "int32",
						"type": "integer"
					},
					"service_pack": {
						"description": "Service pack version number.",
						"example": "2",
						"type": "string"
					},
					"is_server": {
						"description": "Is a Windows server.",
						"example": false,
						"type": "boolean"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"WindowsDeviceInfo_os": {
				"description": "Information about the Windows OS on the device.",
				"properties": {
					"hostname": {
						"description": "Device host.",
						"example": "V02Q33SWOD6C",
						"type": "string"
					},
					"domain_name": {
						"description": "Device domain name.",
						"example": "domain.local",
						"type": "string"
					},
					"intune_managed_device_id": {
						"description": "Intune managed device ID.",
						"example": "chad.braddington",
						"type": "string"
					},
					"version": {
						"$ref": "#/components/schemas/WindowsDeviceInfo_os_version"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"WindowsDeviceInfo_security": {
				"description": "Information about security settings on the Windows device.",
				"properties": {
					"is_tpm_available": {
						"description": "The trusted platform module is available.",
						"example": true,
						"type": "boolean"
					},
					"login_provider_guid": {
						"description": "Credential provider ID.",
						"example": "44E2ED41-48C7-4712-A3C3-250C5E6D5D84",
						"type": "string"
					},
					"login_provider_name": {
						"description": "Name of the credential provider.",
						"example": "Duo",
						"type": "string"
					},
					"security_software": {
						"description": "Array of security software and status of the software.",
						"items": {
							"$ref": "#/components/schemas/WindowsSecuritySoftware"
						},
						"type": "array"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"IosDeviceInfo_hardware": {
				"description": "Hardware identifying information.",
				"properties": {
					"uuid": {
						"description": "Hardware UUID for iOS.",
						"example": "13439BEV8-1944-555V-DEB5-D3W9V9DJ8ECV",
						"type": "string"
					},
					"manufacturer": {
						"description": "Device manufacturer.",
						"example": "Apple",
						"type": "string"
					},
					"model": {
						"description": "The model of the device.",
						"example": "iPhone 12 Pro Max",
						"type": "string"
					},
					"serial_number": {
						"description": "Device system serial number.",
						"example": "C04E8VWD9KM1",
						"type": "string"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"IosDeviceInfo_os_version": {
				"description": "MacOS version.",
				"properties": {
					"major": {
						"description": "Major version.",
						"example": 11,
						"format": "int32",
						"type": "integer"
					},
					"minor": {
						"description": "Minor version.",
						"example": 1,
						"format": "int32",
						"type": "integer"
					},
					"patch": {
						"description": "Patch version.",
						"example": 7,
						"format": "int32",
						"type": "integer"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"IosDeviceInfo_os": {
				"description": "Information about the iOS version.",
				"properties": {
					"hostname": {
						"description": "Device host.",
						"example": "V02Q33SWOD6C",
						"type": "string"
					},
					"version": {
						"$ref": "#/components/schemas/IosDeviceInfo_os_version"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"IosDeviceInfo_security": {
				"description": "Information about security settings on the iOS device.",
				"properties": {
					"password_set": {
						"description": "Is the password set?",
						"example": true,
						"type": "boolean"
					},
					"biometrics_set": {
						"description": "Is biometrics set?",
						"example": true,
						"type": "boolean"
					},
					"secure_enclave_available": {
						"description": "Is the secure enclave available?",
						"example": true,
						"type": "boolean"
					},
					"is_jailbroken": {
						"description": "Is the device jailbroken?",
						"example": false,
						"type": "boolean"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"AndroidDeviceInfo_hardware": {
				"description": "Hardware identifying information.",
				"properties": {
					"manufacturer": {
						"description": "Device manufacturer.",
						"example": "Samsung",
						"type": "string"
					},
					"model": {
						"description": "The model of the device.",
						"example": "Samsung Galaxy S10",
						"type": "string"
					},
					"serial_number": {
						"description": "Device system serial number.",
						"example": "C04E8VWD9KM1",
						"type": "string"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"AndroidDeviceInfo_os_version": {
				"description": "Android software version.",
				"properties": {
					"sdk": {
						"description": "Android SDK version.",
						"example": 10,
						"format": "int32",
						"type": "integer"
					},
					"preview_sdk": {
						"description": "Android preview SDK version.",
						"example": 1,
						"format": "int32",
						"type": "integer"
					},
					"patch": {
						"description": "Patch version.",
						"example": 7,
						"format": "int32",
						"type": "integer"
					},
					"incremental": {
						"description": "Incremental version.",
						"example": "7",
						"type": "string"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"AndroidDeviceInfo_os": {
				"description": "Information about the Android version.",
				"properties": {
					"hostname": {
						"description": "Device host.",
						"example": "V02Q33SWOD6C",
						"type": "string"
					},
					"version": {
						"$ref": "#/components/schemas/AndroidDeviceInfo_os_version"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"AndroidDeviceInfo_security": {
				"description": "Information about security settings on the Android device.",
				"properties": {
					"password_set": {
						"description": "Is the password set?",
						"example": true,
						"type": "boolean"
					},
					"biometrics_set": {
						"description": "Is biometrics set?",
						"example": true,
						"type": "boolean"
					},
					"is_rooted": {
						"description": "Is the device rooted (i.e., jailbroken)?",
						"example": false,
						"type": "boolean"
					},
					"accessibility_service_enabled": {
						"description": "Are accessability services enabled?",
						"example": true,
						"type": "boolean"
					},
					"localhost_service_enabled": {
						"description": "Is the localhost service enabled?",
						"example": true,
						"type": "boolean"
					},
					"secure_enclave_available": {
						"description": "Is the secure enclave available?",
						"example": true,
						"type": "boolean"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"WebDeviceInfo_security": {
				"description": "Browser security information.",
				"properties": {
					"is_webauthn_available": {
						"description": "True if the WebAuthn API is available.",
						"example": true,
						"type": "boolean"
					},
					"is_platform_authenticator_available": {
						"description": "True if a user-verifying platform authenticator is available.",
						"example": true,
						"type": "boolean"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"WebDeviceInfo_browser": {
				"description": "Web Browser identifying information.",
				"properties": {
					"name": {
						"description": "The Web Browser's name.",
						"example": "Chrome",
						"type": "string"
					},
					"version": {
						"description": "The Web Browser's version.",
						"example": "96.0.4664.55",
						"type": "string"
					},
					"engine_name": {
						"description": "The Engine's name.",
						"example": "Blink",
						"type": "string"
					},
					"engine_version": {
						"description": "The Engine's version.",
						"example": "96.0.4664.55",
						"type": "string"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"WebDeviceInfo_platform": {
				"description": "Information about the host device's platform.",
				"properties": {
					"name": {
						"description": "The Platform name.",
						"example": "MacOS",
						"type": "string"
					},
					"version": {
						"description": "The Platform version.",
						"example": "11.2.3",
						"type": "string"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"WebDeviceInfo_device": {
				"description": "Information about the host device.",
				"properties": {
					"architecture": {
						"description": "The Device's architecture.",
						"example": "amd64",
						"type": "string"
					},
					"model": {
						"description": "The Device's model.",
						"example": "Evo Shift 4G",
						"type": "string"
					},
					"type": {
						"description": "The Device type.",
						"example": "mobile",
						"type": "string"
					},
					"vendor": {
						"description": "The Device's vendor.",
						"example": "HTC",
						"type": "string"
					}
				},
				"type": "object",
				"x-bi-v0": true
			},
			"WebDeviceInfo_client_data": {
				"description": "Information provided by the browser's Client Hints API. These values provide higher fidelity information than those parsed from the User Agent string.",
				"properties": {
					"architecture": {
						"description": "The host's architecture.",
						"example": "x86",
						"type": "string"
					},
					"bitness": {
						"description": "The bitness of the host's CPU",
						"example": "64",
						"type": "string"
					},
					"mobile": {
						"description": "True if the device is mobile.",
						"example": true,
						"type": "boolean"
					},
					"model": {
						"description": "The host device's model.",
						"example": "Pixel 2 XL",
						"type": "string"
					},
					"platform": {
						"description": "The host device's operating system.",
						"example": "macOS",
						"type": "string"
					},
					"platform_version": {
						"description": "The version of the host device's operating system.",
						"example": "11.2.3",
						"type": "string"
					},
					"ua_version": {
						"description": "The Web Browser's full version.",
						"example": "Windows",
						"type": "string"
					}
				},
				"type": "object",
				"x-bi-v0": true
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"scheme": "bearer",
				"type": "http"
			}
		}
	},
	"x-readme": {
		"explorer-enabled": true,
		"proxy-enabled": true,
		"samples-enabled": true
	}
}